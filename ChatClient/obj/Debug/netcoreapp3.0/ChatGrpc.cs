// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/chat.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Chat
  {
    static readonly string __ServiceName = "Chat.Chat";

    static readonly grpc::Marshaller<global::GrpcServer.ChatRequest> __Marshaller_Chat_ChatRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.ChatRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.ChatReply> __Marshaller_Chat_ChatReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.ChatReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.NewUserRequest> __Marshaller_Chat_NewUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.NewUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.NewUserReply> __Marshaller_Chat_NewUserReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.NewUserReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.DirectMessageRequest> __Marshaller_Chat_DirectMessageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.DirectMessageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.DirectMessageReply> __Marshaller_Chat_DirectMessageReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.DirectMessageReply.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServer.ChatRequest, global::GrpcServer.ChatReply> __Method_Chat = new grpc::Method<global::GrpcServer.ChatRequest, global::GrpcServer.ChatReply>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "Chat",
        __Marshaller_Chat_ChatRequest,
        __Marshaller_Chat_ChatReply);

    static readonly grpc::Method<global::GrpcServer.NewUserRequest, global::GrpcServer.NewUserReply> __Method_NewUser = new grpc::Method<global::GrpcServer.NewUserRequest, global::GrpcServer.NewUserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NewUser",
        __Marshaller_Chat_NewUserRequest,
        __Marshaller_Chat_NewUserReply);

    static readonly grpc::Method<global::GrpcServer.DirectMessageRequest, global::GrpcServer.DirectMessageReply> __Method_DirectMessage = new grpc::Method<global::GrpcServer.DirectMessageRequest, global::GrpcServer.DirectMessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DirectMessage",
        __Marshaller_Chat_DirectMessageRequest,
        __Marshaller_Chat_DirectMessageReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.ChatReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Chat</summary>
    public partial class ChatClient : grpc::ClientBase<ChatClient>
    {
      /// <summary>Creates a new client for Chat</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ChatClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Chat that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ChatClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ChatClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ChatClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.ChatRequest, global::GrpcServer.ChatReply> Chat(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Chat(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.ChatRequest, global::GrpcServer.ChatReply> Chat(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_Chat, null, options);
      }
      public virtual global::GrpcServer.NewUserReply NewUser(global::GrpcServer.NewUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.NewUserReply NewUser(global::GrpcServer.NewUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NewUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.NewUserReply> NewUserAsync(global::GrpcServer.NewUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NewUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.NewUserReply> NewUserAsync(global::GrpcServer.NewUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NewUser, null, options, request);
      }
      public virtual global::GrpcServer.DirectMessageReply DirectMessage(global::GrpcServer.DirectMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DirectMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcServer.DirectMessageReply DirectMessage(global::GrpcServer.DirectMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DirectMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.DirectMessageReply> DirectMessageAsync(global::GrpcServer.DirectMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DirectMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.DirectMessageReply> DirectMessageAsync(global::GrpcServer.DirectMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DirectMessage, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ChatClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ChatClient(configuration);
      }
    }

  }
}
#endregion
